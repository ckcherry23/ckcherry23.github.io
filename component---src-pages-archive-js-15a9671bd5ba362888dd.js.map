{"version":3,"file":"component---src-pages-archive-js-15a9671bd5ba362888dd.js","mappings":"4NAWA,MAAMA,EAAuBC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,eAAVJ,CAAU,mxCAyHzBK,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,UAAU,IA8GpD,UAjGoBC,IAAyB,IAAxB,SAAEC,EAAQ,KAAEC,GAAMF,EACrC,MAAMG,EAAWD,EAAKE,kBAAkBC,MAClCC,GAAcC,EAAAA,EAAAA,QAAO,MACrBC,GAAcD,EAAAA,EAAAA,QAAO,MACrBE,GAAiBF,EAAAA,EAAAA,QAAO,IACxBG,GAAuBC,EAAAA,EAAAA,MAY7B,OAVAC,EAAAA,EAAAA,YAAU,KACJF,IAIJG,EAAAA,EAAGC,OAAOR,EAAYS,SAASC,EAAAA,EAAAA,aAC/BH,EAAAA,EAAGC,OAAON,EAAYO,SAASC,EAAAA,EAAAA,UAAS,IAAK,IAC7CP,EAAeM,QAAQE,SAAQ,CAACC,EAAKC,IAAMN,EAAAA,EAAGC,OAAOI,GAAKF,EAAAA,EAAAA,UAAa,GAAJG,MAAS,GAC3E,IAGDC,EAAAA,cAACC,EAAAA,GAAM,CAACpB,SAAUA,GAChBmB,EAAAA,cAACE,EAAAA,EAAM,CAACC,MAAM,YAEdH,EAAAA,cAAA,YACEA,EAAAA,cAAA,UAAQF,IAAKZ,GACXc,EAAAA,cAAA,MAAII,UAAU,eAAc,WAC5BJ,EAAAA,cAAA,KAAGI,UAAU,YAAW,oCAG1BJ,EAAAA,cAAC9B,EAAoB,CAAC4B,IAAKV,GACzBY,EAAAA,cAAA,aACEA,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,MAAII,UAAU,kBAAiB,YAC/BJ,EAAAA,cAAA,MAAII,UAAU,kBAAiB,cAC/BJ,EAAAA,cAAA,UAAI,WAGRA,EAAAA,cAAA,aACGjB,EAASsB,OAAS,GACjBtB,EAASuB,KAAI,CAAAC,EAAWR,KAAO,IAAjB,KAAES,GAAMD,EACpB,MAAM,KAAEE,EAAI,OAAEC,EAAM,SAAEC,EAAQ,MAAEC,EAAK,MAAET,EAAK,QAAEU,EAAO,UAAEC,GACrDN,EAAKO,YACP,OACEf,EAAAA,cAAA,MAAIgB,IAAKjB,EAAGD,IAAKmB,GAAO5B,EAAeM,QAAQI,GAAKkB,GAClDjB,EAAAA,cAAA,MAAII,UAAU,iBAAe,GAAK,IAAIc,KAAKT,GAAMU,eAEjDnB,EAAAA,cAAA,MAAII,UAAU,SACZJ,EAAAA,cAAA,KAAGoB,KAAMT,GAAYD,GAAUE,GAAQT,IAGzCH,EAAAA,cAAA,MAAII,UAAU,0BACXS,EAAUb,EAAAA,cAAA,YAAOa,GAAkBb,EAAAA,cAAA,YAAM,MAG5CA,EAAAA,cAAA,MAAII,UAAU,uBACXU,EAAUT,OAAS,GAClBS,EAAUR,KAAI,CAACe,EAAMtB,IACnBC,EAAAA,cAAA,QAAMgB,IAAKjB,GACRsB,EACA,GACAtB,IAAMe,EAAUT,OAAS,GACxBL,EAAAA,cAAA,QAAMI,UAAU,aAAY,SAMtCJ,EAAAA,cAAA,MAAII,UAAU,SACZJ,EAAAA,cAAA,WACGW,GACCX,EAAAA,cAAA,KAAGoB,KAAMT,EAAU,aAAW,iBAC5BX,EAAAA,cAACsB,EAAAA,GAAI,CAACC,KAAK,cAGdb,GACCV,EAAAA,cAAA,KAAGoB,KAAMV,EAAQ,aAAW,eAC1BV,EAAAA,cAACsB,EAAAA,GAAI,CAACC,KAAK,cAKhB,QAOZ,C","sources":["webpack://ckcherry23.github.io/./src/pages/archive.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { srConfig } from '@config';\nimport sr from '@utils/sr';\nimport { Layout } from '@components';\nimport { Icon } from '@components/icons';\nimport { usePrefersReducedMotion } from '@hooks';\n\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n\n  @media (max-width: 768px) {\n    margin: 50px -10px;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n\n    .hide-on-mobile {\n      @media (max-width: 768px) {\n        display: none;\n      }\n    }\n\n    tbody tr {\n      &:hover,\n      &:focus {\n        background-color: var(--light-navy);\n      }\n    }\n\n    th,\n    td {\n      padding: 12px;\n      text-align: left;\n\n      &:first-child {\n        padding-left: 20px;\n\n        @media (max-width: 768px) {\n          padding-left: 10px;\n        }\n      }\n      &:last-child {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n        }\n      }\n\n      svg {\n        width: 20px;\n        height: 20px;\n      }\n    }\n\n    tr {\n      cursor: default;\n\n      td:first-child {\n        border-top-left-radius: var(--border-radius);\n        border-bottom-left-radius: var(--border-radius);\n      }\n      td:last-child {\n        border-top-right-radius: var(--border-radius);\n        border-bottom-right-radius: var(--border-radius);\n      }\n    }\n\n    td {\n      &.year {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n          font-size: var(--fz-sm);\n        }\n      }\n\n      &.title {\n        padding-right: 20px;\n        color: var(--lightest-slate);\n        font-size: var(--fz-xl);\n        font-weight: 600;\n        line-height: 1.25;\n\n        a {\n          position: static;\n\n          &:before {\n            content: '';\n            display: block;\n            position: absolute;\n            z-index: 0;\n            width: 100%;\n            height: 100%;\n            top: 0;\n            left: 0;\n          }\n        }\n      }\n\n      &.company {\n        font-size: var(--fz-lg);\n        white-space: wrap;\n      }\n\n      &.tech {\n        font-size: var(--fz-xxs);\n        font-family: var(--font-mono);\n        line-height: 1.5;\n        .separator {\n          margin: 0 5px;\n        }\n        span {\n          display: inline-block;\n        }\n      }\n\n      &.links {\n        min-width: 100px;\n\n        div {\n          display: flex;\n          align-items: center;\n\n          a {\n            ${({ theme }) => theme.mixins.flexCenter};\n            flex-shrink: 0;\n          }\n\n          a + a {\n            margin-left: 10px;\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArchivePage = ({ location, data }) => {\n  const projects = data.allMarkdownRemark.edges;\n  const revealTitle = useRef(null);\n  const revealTable = useRef(null);\n  const revealProjects = useRef([]);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealTable.current, srConfig(200, 0));\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 10)));\n  }, []);\n\n  return (\n    <Layout location={location}>\n      <Helmet title=\"Archive\" />\n\n      <main>\n        <header ref={revealTitle}>\n          <h1 className=\"big-heading\">Archive</h1>\n          <p className=\"subtitle\">A list of things I’ve worked on</p>\n        </header>\n\n        <StyledTableContainer ref={revealTable}>\n          <table>\n            <thead>\n              <tr>\n                <th>Year</th>\n                <th>Title</th>\n                <th className=\"hide-on-mobile\">Made for</th>\n                <th className=\"hide-on-mobile\">Built with</th>\n                <th>Links</th>\n              </tr>\n            </thead>\n            <tbody>\n              {projects.length > 0 &&\n                projects.map(({ node }, i) => {\n                  const { date, github, external, figma, title, company, techstack } =\n                    node.frontmatter;\n                  return (\n                    <tr key={i} ref={el => (revealProjects.current[i] = el)}>\n                      <td className=\"overline year\">{`${new Date(date).getFullYear()}`}</td>\n\n                      <td className=\"title\">\n                        <a href={external || github || figma}>{title}</a>\n                      </td>\n\n                      <td className=\"company hide-on-mobile\">\n                        {company ? <span>{company}</span> : <span>—</span>}\n                      </td>\n\n                      <td className=\"tech hide-on-mobile\">\n                        {techstack.length > 0 &&\n                          techstack.map((item, i) => (\n                            <span key={i}>\n                              {item}\n                              {''}\n                              {i !== techstack.length - 1 && (\n                                <span className=\"separator\">&middot;</span>\n                              )}\n                            </span>\n                          ))}\n                      </td>\n\n                      <td className=\"links\">\n                        <div>\n                          {external && (\n                            <a href={external} aria-label=\"External Link\">\n                              <Icon name=\"External\" />\n                            </a>\n                          )}\n                          {github && (\n                            <a href={github} aria-label=\"GitHub Link\">\n                              <Icon name=\"GitHub\" />\n                            </a>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </StyledTableContainer>\n      </main>\n    </Layout>\n  );\n};\nArchivePage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default ArchivePage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            title\n            techstack\n            github\n            external\n            company\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["StyledTableContainer","styled","div","withConfig","displayName","componentId","_ref","theme","mixins","flexCenter","_ref2","location","data","projects","allMarkdownRemark","edges","revealTitle","useRef","revealTable","revealProjects","prefersReducedMotion","usePrefersReducedMotion","useEffect","sr","reveal","current","srConfig","forEach","ref","i","React","Layout","Helmet","title","className","length","map","_ref3","node","date","github","external","figma","company","techstack","frontmatter","key","el","Date","getFullYear","href","item","Icon","name"],"sourceRoot":""}